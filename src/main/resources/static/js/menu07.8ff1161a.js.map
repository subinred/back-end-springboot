{"version":3,"file":"js/menu07.8ff1161a.js","mappings":"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","sources":["webpack://front-end-vue/./node_modules/js-file-download/file-download.js","webpack://front-end-vue/./src/apis/board.js","webpack://front-end-vue/./src/components/menu02/ModalDialogTemplate.vue","webpack://front-end-vue/./src/components/menu02/ModalDialogTemplate.vue?55f4","webpack://front-end-vue/./src/components/menu07/AlertDialog.vue","webpack://front-end-vue/./src/views/menu07/Exam01AsyncControl.vue","webpack://front-end-vue/./src/views/menu07/Exam01AsyncControl.vue?f41b","webpack://front-end-vue/./src/views/menu07/auth/Join.vue","webpack://front-end-vue/./src/views/menu07/auth/Join.vue?8402","webpack://front-end-vue/./src/views/menu07/auth/Login.vue","webpack://front-end-vue/./src/views/menu07/auth/Login.vue?70bd","webpack://front-end-vue/./src/views/menu07/board/List.vue","webpack://front-end-vue/./src/views/menu07/board/List.vue?5f9a","webpack://front-end-vue/./src/views/menu07/board/Read.vue","webpack://front-end-vue/./src/views/menu07/board/Read.vue?a213","webpack://front-end-vue/./src/views/menu07/board/UpdateForm.vue","webpack://front-end-vue/./src/views/menu07/board/UpdateForm.vue?f0df","webpack://front-end-vue/./src/views/menu07/board/WriteForm.vue","webpack://front-end-vue/./src/views/menu07/board/WriteForm.vue?b13f"],"sourcesContent":["module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // Fixes \"webkit blob resource error 1\"\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200)\n    }\n}\n","//board와 관련된 통신인 요기용\r\nimport axios from \"axios\";\r\nimport apiAuth from \"@/apis/auth\";\r\n\r\n\r\n\r\n//게시물 목록 요청\r\nasync function getBoardList(pageNo = 1) {\r\n  let response = null;\r\n  try {\r\n    response = await axios.get(\"/board/list\", { params: { pageNo } });\r\n    //console.log(response);\r\n    return { result: \"success\", data: response.data };\r\n  }catch (error) {\r\n    if (error.response) {\r\n      if (error.response.status === 403) {\r\n        if (await apiAuth.refreshToken()) {\r\n          response = await axios.get(\"/board/list\", { params: { pageNo } });\r\n          return { result: \"success\", data: response.data };\r\n        }\r\n      }\r\n    } else {\r\n      //네트워크 오류\r\n      return { result: \"fail-network\" };\r\n    }\r\n  }\r\n}\r\n\r\n//게시물 쓰기(멀티 파트로 구성해서 전달)\r\nasync function createBoard(multipartFormData){\r\n  let dbBoard=null;\r\n  try{\r\n    const response=await axios.post(\"/board/\", multipartFormData);\r\n    dbBoard=response.data;\r\n  }catch(error){\r\n    if(error.response){\r\n      //서버 응답이 있다\r\n      if(error.response.status===403){\r\n        if(await apiAuth.refreshToken()){\r\n          const response=await axios.post(\"/board/\", multipartFormData);\r\n          dbBoard=response.data;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return dbBoard\r\n}\r\n\r\n//게시물 가져오기\r\nasync function readBoard(bno, hit){\r\n  let board=null;\r\n  try{\r\n    const response=await axios.get(`/board/${bno}?hit=${hit}`);\r\n    board=response.data;\r\n  }catch(error){\r\n    if(error.response){\r\n      if(error.response.status===403){\r\n        if(await apiAuth.refreshToken()){\r\n          const response=await axios.get(`/board/${bno}?hit=${hit}`);\r\n          board=response.data;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return board;\r\n} \r\n\r\n//파일 다운로드\r\nasync function downloadBoardAttach(bno){\r\n  let blob=null;\r\n  try{\r\n    const response=await axios.get(`/board/battach/${bno}`, {responseType: \"blob\"});\r\n    blob=response.data;\r\n  }catch(error){\r\n    if(error.response){\r\n      if(error.response.status===403){\r\n        if(await apiAuth.refreshToken()){\r\n          const response=await axios.get(`/board/battach/${bno}`, {responseType: \"blob\"});\r\n          blob=response.data;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return blob;\r\n}\r\n\r\n//게시물 삭제\r\nasync function deleteBoard(bno){\r\n  let result=null;\r\n  try{\r\n    const response=await axios.delete(`/board/${bno}`);\r\n    result=response.data.result; //response.date.result=success\r\n  }catch(error){\r\n    if(error.response){\r\n      if(error.response.status===403){\r\n        if(await apiAuth.refreshToken()){\r\n          const response=await axios.delete(`/board/${bno}`);\r\n          result=response.data.result; //response.date.result=success\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nasync function updateBoard(multipartFormData){\r\n  let dbBoard=null;\r\n  try{\r\n    const response=await axios.put(`/board/`, multipartFormData);\r\n    dbBoard=response.data;\r\n  }catch(error){\r\n    if(error.response){\r\n      if(error.response.status===403){\r\n        if(await apiAuth.refreshToken()){\r\n          const response=await axios.put(`/board/`, multipartFormData);\r\n          dbBoard=response.data;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return dbBoard;\r\n}\r\n\r\n//내보내기\r\nexport default {\r\n  getBoardList,\r\n  createBoard,\r\n  readBoard,\r\n  downloadBoardAttach,\r\n  deleteBoard,\r\n  updateBoard\r\n}","<template>\r\n<Transition name=\"modal\">\r\n    <div  class=\"modal-mask\">\r\n      <div class=\"modal-wrapper\">\r\n        <div class=\"modal-container\" :style=\"$attrs.style\"> <!--내장 변수는 $-->\r\n          <div class=\"modal-header\">\r\n            <!--slot-->\r\n            <slot name=\"header\">default header</slot>\r\n          </div>\r\n\r\n          <div class=\"modal-body\">\r\n             <!--slot-->\r\n            <slot name=\"body\">default body</slot>\r\n          </div>\r\n\r\n          <div class=\"modal-footer\">\r\n             <!--slot-->\r\n            <slot name=\"footer\">\r\n              default footer\r\n              <button\r\n                class=\"modal-default-button\"\r\n                @click=\"$emit('close')\"\r\n              >OK</button>\r\n            </slot>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</Transition>\r\n</template>\r\n\r\n<script>\r\nexport default{\r\n  inheritAttrs:false,\r\n};\r\n</script>\r\n\r\n<style scope>\r\n.modal-mask {\r\n  position: fixed;\r\n  z-index: 9998;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: table;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.modal-wrapper {\r\n  display: table-cell;\r\n  vertical-align: middle;\r\n}\r\n\r\n.modal-container {\r\n  width: 300px;\r\n  margin: 0px auto;\r\n  padding: 20px 30px;\r\n  background-color: #fff;\r\n  border-radius: 2px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.modal-header h3 {\r\n  margin-top: 0;\r\n  color: #42b983;\r\n}\r\n\r\n.modal-body {\r\n  margin: 20px 0;\r\n}\r\n\r\n.modal-default-button {\r\n  float: right;\r\n}\r\n\r\n/*\r\n * The following styles are auto-applied to elements with\r\n * transition=\"modal\" when their visibility is toggled\r\n * by Vue.js.\r\n *\r\n * You can easily play with the modal transition by editing\r\n * these styles.\r\n */\r\n\r\n.modal-enter-from {\r\n  opacity: 0;\r\n}\r\n\r\n.modal-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n.modal-enter-from .modal-container,\r\n.modal-leave-to .modal-container {\r\n  -webkit-transform: scale(1.1);\r\n  transform: scale(1.1);\r\n}\r\n</style>","import { render } from \"./ModalDialogTemplate.vue?vue&type=template&id=2f55df57\"\nimport script from \"./ModalDialogTemplate.vue?vue&type=script&lang=js\"\nexport * from \"./ModalDialogTemplate.vue?vue&type=script&lang=js\"\n\nimport \"./ModalDialogTemplate.vue?vue&type=style&index=0&id=2f55df57&scope=true&lang=css\"\n\nimport exportComponent from \"C:\\\\osstem\\\\projects\\\\node-worksapce\\\\front-end-vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import script from \"./AlertDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AlertDialog.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n<div class=\"card\">\r\n  <div class=card-header>\r\n    Exam01AsyncControl\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <div>\r\n      <button @click=\"handleBtn1\" class=\"btn btn-info btn-sm mr-2\">비동기 작업1</button>\r\n      <button @click=\"handleBtn2\" class=\"btn btn-info btn-sm mr-2\">비동기 작업2</button>\r\n    </div>\r\n    <div v-if=\"!loading\" class=\"mt-3\">\r\n      <div>result: {{result}} </div>\r\n    </div>\r\n    <div v-if=\"loading\" class=\"spinner-border text-info mt-3\" role=\"status\">\r\n      <span class=\"sr-only\">Loading...</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref} from \"vue\";\r\nconst result=ref(\"\");\r\nconst loading=ref(false);\r\n\r\nfunction handleBtn1() {\r\n  loading.value=true;\r\n  work() //promise를 사용한 function을 호출해서 성공/실패에 따라 셋팅은 요기서!\r\n  .then((data)=>{\r\n    result.value=data;\r\n  })\r\n  .catch((error)=>{\r\n    console.log(error);\r\n  })\r\n  .finally(()=>{\r\n    loading.value=false;\r\n  });\r\n}\r\nasync function handleBtn2() {\r\n  try{\r\n    loading.value=true;\r\n    const data=await work();\r\n    result.value=data;\r\n  }catch(error){\r\n    console.log(error);\r\n  }finally{\r\n    loading.value=false;\r\n  }\r\n}\r\n\r\n//비동기 작업 정의\r\nfunction work(){\r\n  const promise=new Promise((resolve, reject)=>{\r\n    setTimeout(()=>{\r\n      resolve(\"value\");\r\n    }, 3000);\r\n  });\r\n  return promise;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./Exam01AsyncControl.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam01AsyncControl.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n<div class=\"card\">\r\n  <div class=card-header>\r\n    Join\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <div class=\"form-group\">\r\n      <label class=\"form-label\">User ID</label>\r\n      <input type=\"text\" class=\"form-control\" v-model=\"user.id\"/><!--양방향 바인딩-->\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label class=\"form-label\">User Name</label>\r\n      <input type=\"text\" class=\"form-control\" v-model=\"user.name\"/>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label class=\"col-form-label\">User Password</label>\r\n      <input type=\"text\" class=\"form-control\" v-model=\"user.password\"/>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label class=\"col-form-label\">User Role</label>\r\n      <select class=\"form-control\" name=\"mrole\" v-model=\"user.role\">\r\n        <option value=\"ROLE_ADMIN\">ROLE_ADMIN</option>\r\n        <option value=\"ROLE_MANAGER\">ROLE_MANAGER</option>\r\n        <option value=\"ROLE_USER\" selected>ROLE_USER</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label class=\"col-form-label\">User Email</label>\r\n      <input type=\"text\" class=\"form-control\" v-model=\"user.email\"/>\r\n    </div>\r\n    <button class=\"btn btn-info btn-sm\" v-on:click=\"handleJoin\">가입</button>\r\n  </div>\r\n\r\n  <AlertDialog v-if=\"alertDialog\" :message=\"alertDialogMessage\" :loading=\"loading\" @close=\"alertDialog=false\"/>\r\n</div>\r\n</template>\r\n\r\n<script setup>\r\nimport {reactive, ref} from \"vue\";\r\nimport apiAuth from \"@/apis/auth\";\r\nimport AlertDialog from \"@/components/menu07/AlertDialog.vue\";\r\n\r\nconst alertDialog=ref(false);\r\nconst alertDialogMessage=ref(\"\");\r\nconst loading=ref(false);\r\n\r\n\r\nconst user = reactive({\r\n  id: \"user\",\r\n  name: \"사용자\",\r\n  password: \"12345\",\r\n  role: \"ROLE_USER\",\r\n  email: \"user@mycompany.com\"\r\n});\r\n\r\nasync function handleJoin() {\r\n  alertDialog.value=true;//보인다\r\n  loading.value=true;\r\n  const result=await apiAuth.join(user);\r\n  if(result===\"success\"){\r\n    alertDialogMessage.value=\"회원 가입 성공\";\r\n    console.log(result);\r\n  }else if(result===\"duplicated\"){\r\n    alertDialogMessage.value=\"회원 가입 실패: 아이디 중복\";\r\n    console.log(result);\r\n  }else if(result===\"fail\"){\r\n    alertDialogMessage.value=\"회원 가입 실패: 서버 오류\";\r\n    console.log(result);\r\n  }else{\r\n    alertDialogMessage.value=\"회원 가입 실패: 네트워크 오류\";\r\n    console.log(result);\r\n  }\r\n  loading.value=false;\r\n  \r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./Join.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Join.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">로그인</div>\r\n    <div class=\"card-body\">\r\n      <div v-if=\"store.state.userId === ''\">\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">User ID</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"userId\" v-model=\"user.id\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"userPassword\" class=\"col-form-label\">User Password</label>\r\n          <input type=\"text\" class=\"form-control\" v-model=\"user.password\" />\r\n        </div>\r\n        <button class=\"btn btn-info btn-sm\" v-on:click=\"handleLogin\">로그인</button>\r\n      </div>\r\n      <div v-if=\"store.state.userId !== ''\">\r\n        <button class=\"btn btn-info btn-sm mr-2\" v-on:click=\"handleLogout\">로그아웃</button>\r\n      </div>\r\n    </div>\r\n    <AlertDialog v-if=\"alertDialog\" :message=\"alertDialogMessage\" :loading=\"loading\" @close=\"alertDialog = false\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport apiAuth from \"@/apis/auth\";\r\nimport AlertDialog from \"@/components/menu07/AlertDialog.vue\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst alertDialog = ref(false);\r\nconst alertDialogMessage = ref(\"\");\r\nconst loading = ref(false);\r\n\r\nconst user = reactive({\r\n  id: \"user\",\r\n  password: \"12345\",\r\n});\r\nasync function handleLogin() {\r\n  alertDialog.value = true;\r\n  loading.value = true;\r\n\r\n  const result = await apiAuth.login(user);\r\n  if (result === \"success\") {\r\n    alertDialog.value = false;\r\n    //router.push(\"....\")\r\n  } else if (result === \"fail-401\") {\r\n    alertDialogMessage.value = \"로그인 실패: 아이디 또는 패스워드가 틀림\";\r\n  } else {\r\n    alertDialogMessage.value = \"로그인 실패 : 네트워크 에러\";\r\n  }\r\n  loading.value = false;\r\n}\r\nasync function handleLogout() {\r\n  await apiAuth.logout();\r\n}\r\n</script>\r\n\r\n<style scoped></style>","import script from \"./Login.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Login.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n<div class=\"card\">\r\n  <div class=card-header>\r\n    List\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <div v-if=\"page!=null\">\r\n      <div class=\"mb-3\">\r\n        <router-link to=\"/menu07/board/writeForm\" class=\"btn btn-info btn-sm\">생성</router-link>\r\n      </div>\r\n      <table class=\"table table-sm table-striped table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th class=\"text-center\" style=\"width:70px\">번호</th>\r\n            <th class=\"text-center\">제목</th>\r\n            <th class=\"text-center\" style=\"width:90px\">글쓴이</th>\r\n            <th class=\"text-center\" style=\"width:120px\">날짜</th>\r\n            <th class=\"text-center\" style=\"width:70px\">조회수</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"board in page.boards\" :key=\"board.bno\">\r\n            <td class=\"text-center\">{{board.bno}}</td>\r\n            <td >\r\n              <router-link :to=\"`/menu07/board/read?bno=${board.bno}&pageNo=${page.pager.pageNo}&hit=true`\">{{board.btitle}}</router-link>\r\n            </td>\r\n            <td class=\"text-center\">{{board.mid}}</td>\r\n            <td class=\"text-center\">{{new Date(board.bdate).toLocaleDateString()}}</td>\r\n            <td class=\"text-center\">{{board.bhitcount}}</td>\r\n          </tr>\r\n          <tr>\r\n            <td colspan=\"5\" class=\"text-center\">\r\n              <button @click=\"changePageNo(1)\" class=\"btn btn-outline-primary btn-sm mr-1\">처음</button>\r\n              <button v-if=\"page.pager.groupNo>1\" @click=\"changePageNo(page.pager.startPageNo-1)\" class=\"btn btn-outline-info btn-sm mr-1\">이전</button>\r\n              <button v-for=\"pageNo in range(page.pager.startPageNo, page.pager.endPageNo)\" :key=\"pageNo\" @click=\"changePageNo(pageNo)\" \r\n                  class=\"btn btn-outline-success btn-sm mr-1\" :class=\"(page.pager.pageNo==pageNo)?'btn-danger':'btn-outline-success'\">{{pageNo}}</button>\r\n                  <!--{'btn-outline-success':(page.pager.pageNo!=pageNo), 'btn-danger':(page.pager.pageNo==pageNo)}-->\r\n              <button v-if=\"page.pager.groupNo<page.pager.totalGroupNo\" @click=\"changePageNo(page.pager.endPageNo+1)\" class=\"btn btn-outline-info btn-sm mr-1\">다음</button>\r\n              <button @click=\"changePageNo(page.pager.totalPageNo)\" class=\"btn btn-outline-primary btn-sm mr-1\">맨끝</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script setup>\r\nimport apiBoard from \"@/apis/board\"\r\nimport {ref, watch} from \"vue\";\r\nimport {useRoute, useRouter} from \"vue-router\";\r\nimport {useStore} from \"vuex\";\r\n\r\nconst store=useStore();\r\n\r\n//반응형 속성 선언\r\nconst page=ref(null);\r\n\r\n//라우팅 시에 전달된 QueryString에서 pageNo를 읽기\r\nconst route=useRoute();\r\nconst router=useRouter();\r\nlet pageNo=route.query.pageNo;\r\nif(pageNo===\"undifined\"){\r\n  pageNo=1;\r\n}\r\nif(store.state.userId===''){//user 로그인 되어 있는지 확인\r\nconsole.log(123);\r\n  router.push(\"/menu07/auth/login\");\r\n}\r\n\r\n\r\n//Rest API와 통신해서 페이지에 대한 정보(게시물 목록, 페이저) 를 page 라는 반응형 속성에 저장\r\nasync function getBoardList(pageNo) {\r\n  const result = await apiBoard.getBoardList(pageNo);\r\n  \r\n  //api에서 로그인이 되었는지 확인한 결과를 result로 리턴\r\n  if (result.result===\"success\") {//로그인 된 경우\r\n    page.value = result.data;\r\n  }else{//인증 안된경우\r\n    router.push(\"/menu07/auth/login\");\r\n  }\r\n}\r\ngetBoardList(pageNo);\r\n\r\nfunction range(start, end){\r\n  const numbers=[];\r\n  for(var i=start; i<=end;i++){\r\n    numbers.push(i);\r\n  }\r\n  return numbers;\r\n}\r\n\r\nfunction changePageNo(pageNo) {\r\n  router.push(`/menu07/board/list?pageNo=${pageNo}`);\r\n}\r\n\r\nwatch(route, (newUrl, oldUrl)=>{\r\n  if(newUrl.path===\"/menu07/board/list\"){\r\n    if(newUrl.query.pageNo){\r\n      getBoardList(newUrl.query.pageNo);\r\n    }else{\r\n      getBoardList(1);\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./List.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./List.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n<div class=\"card\">\r\n  <div class=card-header>\r\n    Read\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <div v-if=\"board!=null\">\r\n      <div class=\"d-flex\">\r\n        <div>\r\n          <p>bno: {{board.bno}}</p>\r\n          <p>btitle: {{board.btitle}}</p>\r\n          <p>bcontent: {{board.bcontent}}</p>\r\n          <p>mid: {{board.mid}}</p>\r\n          <p>bdate: {{new Date(board.bdate).toLocaleDateString()}}</p>\r\n          <p>bhitcount: {{board.bhitcount}}</p>\r\n          <p v-if=\"board.battachoname!=null\">\r\n            battachoname: {{board.battachoname}}\r\n            <button @click=\"downloadBattach\" class=\"btn btn-info btn-sm ml-2\">다운로드</button>\r\n          </p>\r\n        </div>\r\n        <div class=\"ml-5\">\r\n          <img v-if=\"board.battachoname!=null\" :src=\"battach\" width=\"300\"/>\r\n        </div>\r\n      </div>\r\n      <div>\r\n          <router-link :to=\"`/menu07/board/list?pageNo=${pageNo}`\" \r\n            class=\"btn btn-info btn-sm mr-2\">목록</router-link>\r\n            <!--수정 후 다시 돌아왔을 때 해당 페이지로 돌아오기 위해서 &pageNo=${$route.query.pageNo} 받음-->\r\n          <router-link :to=\"`/menu07/board/updateform?bno=${$route.query.bno}&pageNo=${$route.query.pageNo}`\" \r\n            class=\"btn btn-info btn-sm mr-2\">수정</router-link>\r\n          <button class=\"btn btn-info btn-sm mr-2\" @click=\"handleRemove\">삭제</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script setup>\r\nimport {useRoute, useRouter} from \"vue-router\";\r\nimport apiBoard from \"@/apis/board\";\r\nimport {ref} from \"vue\";\r\nimport fileDownload from \"js-file-download\";\r\nconst route=useRoute();\r\nconst router=useRouter();\r\nconst bno=route.query.bno;\r\nconst pageNo=route.query.pageNo;\r\nconst hit=route.query.hit;\r\nconst board=ref(null);\r\nconst battach=ref(null);\r\n\r\nasync function getBoard(){// 응답을 주기 전에 dom이 먼저 생성되면 안되기 때문에 await\r\n  apiBoard.readBoard(bno, hit)\r\n  .then((data)=>{\r\n    board.value=data;\r\n  });\r\n  const blob=await apiBoard.downloadBoardAttach(bno);\r\n  if(blob!=null){\r\n    battach.value=URL.createObjectURL(blob);\r\n  }\r\n  \r\n}\r\ngetBoard();\r\n\r\n//파일 다운로드\r\nasync function downloadBattach(){\r\n  const blob=await apiBoard.downloadBoardAttach(bno);\r\n  if(blob!=null){\r\n    fileDownload(blob, board.value.battachoname);//저장할 파일 형식과 파일 이름\r\n  }\r\n}\r\n\r\n//게시글 삭제\r\nasync function handleRemove(){\r\n  const result=await apiBoard.deleteBoard(bno);\r\n  if(result===\"success\"){\r\n    router.push(`/menu07/board/list?pageNo=${pageNo}`);\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./Read.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Read.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n<div class=\"card\">\r\n  <div class=card-header>\r\n    UpdateForm\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <form v-if=\"board\" v-on:submit.prevent=\"handleUpdate\"><!--prevent를 이용해 제출은 막고 handleAdd 메소드 실행-->\r\n      <div class=\"form-group row\">\r\n        <label class=\"col-sm-2 col-form-label\">제목</label>\r\n        <div class=\"col-sm-10\">\r\n          <input type=\"text\" class=\"form-control\" v-model=\"board.btitle\"/>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group row\">\r\n        <label class=\"col-sm-2 col-form-label\">내용</label>\r\n        <div class=\"col-sm-10\">\r\n          <input type=\"text\" class=\"form-control\" v-model=\"board.bcontent\"/><!--type-text를 통해 양방향 바인딩-->\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group row\">\r\n        <label class=\"col-sm-2 col-form-label\">첨부그림</label>\r\n        <div class=\"col-sm-10\">\r\n          <input type=\"file\" class=\"form-control-file\" ref=\"newBattach\" @change=\"previewImg\"/>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <img :src=\"battach\" width=\"200\"/>\r\n      </div>\r\n      <div class=\"form-group row mt-3\">\r\n        <div class=\"col-sm-12 d-flex justify-content-center\">\r\n          <input type=\"submit\" class=\"btn btn-primary btn-sm mr-2\" value=\"수정\"/>\r\n          <input type=\"button\" class=\"btn btn-primary btn-sm\" value=\"취소\" v-on:click=\"handleCancel\"/>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script setup>\r\nimport apiBoard from \"@/apis/board\";\r\nimport {ref} from \"vue\";\r\nimport {useRoute, useRouter} from \"vue-router\";\r\n\r\nconst route=useRoute();\r\nconst router=useRouter();\r\n\r\nconst board=ref(null);\r\nconst bno=route.query.bno;\r\nconst pageNo=route.query.bno;\r\nconst newBattach=ref(null);\r\nconst battach=ref(null);\r\n\r\nasync function getBoard() {\r\n  const dbBoard=await apiBoard.readBoard(bno, false);\r\n  board.value=dbBoard;\r\n  const blob=await apiBoard.downloadBoardAttach(bno);\r\n  if(blob!=null){\r\n    battach.value=URL.createObjectURL(blob);\r\n  }\r\n}\r\ngetBoard();\r\n\r\nasync function handleUpdate() {\r\n  const multipartFormData=new FormData();\r\n  multipartFormData.append(\"bno\", board.value.bno);\r\n  multipartFormData.append(\"btitle\", board.value.btitle);\r\n  multipartFormData.append(\"bcontent\", board.value.bcontent);\r\n  if(newBattach.value.files.length!=0){\r\n    multipartFormData.append(\"battach\", newBattach.value.files[0]);\r\n  }\r\n  await apiBoard.updateBoard(multipartFormData);//board.js updateBoard 연결\r\n  router.push(`/menu07/board/read?bno=${bno}&pageNo=${pageNo}&hit=false`);\r\n}\r\n\r\nasync function handleCancel() {\r\n  router.push(`/menu07/board/read?bno=${bno}&pageNo=${pageNo}&hit=false`);\r\n}\r\n\r\nfunction previewImg() {\r\n  if(newBattach.value.files.length!=0){\r\n    battach.value=URL.createObjectURL(newBattach.value.files[0]);\r\n  }else{\r\n    battach.value=null;\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./UpdateForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n<div class=\"card\">\r\n  <div class=card-header>\r\n    WriteForm\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <form v-on:submit.prevent=\"handleAdd\"><!--prevent를 이용해 제출은 막고 handleAdd 메소드 실행-->\r\n      <div class=\"form-group row\">\r\n        <label class=\"col-sm-2 col-form-label\">제목</label>\r\n        <div class=\"col-sm-10\">\r\n          <input type=\"text\" class=\"form-control\" v-model=\"board.btitle\"/>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group row\">\r\n        <label class=\"col-sm-2 col-form-label\">내용</label>\r\n        <div class=\"col-sm-10\">\r\n          <input type=\"text\" class=\"form-control\" v-model=\"board.bcontent\"/><!--type-text를 통해 양방향 바인딩-->\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group row\">\r\n        <label class=\"col-sm-2 col-form-label\">첨부그림</label>\r\n        <div class=\"col-sm-10\">\r\n          <input type=\"file\" class=\"form-control-file\" ref=\"battach\"/>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-sm-12 d-flex justify-content-center\">\r\n          <input type=\"submit\" class=\"btn btn-primary btn-sm mr-2\" value=\"추가\"/>\r\n          <input type=\"button\" class=\"btn btn-primary btn-sm\" value=\"취소\" v-on:click=\"handleCancel\"/>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script setup>\r\nimport {reactive, ref} from \"vue\";\r\nimport {useRouter} from \"vue-router\";\r\nimport apiBoard from \"@/apis/board\";\r\nconst router=useRouter();\r\nconst board=reactive({\r\n  btitle: \"\",\r\n  bcontent: \"\"\r\n});\r\nconst battach=ref(null);\r\nasync function handleAdd(){\r\n  const multipartFormData=new FormData();\r\n  multipartFormData.append(\"btitle\", board.btitle);\r\n  multipartFormData.append(\"bcontent\", board.bcontent);\r\n  multipartFormData.append(\"mid\", \"user\");\r\n  if(battach.value.files.length!=0){\r\n    multipartFormData.append(\"battach\", battach.value.files[0]);\r\n  }\r\n  await apiBoard.createBoard(multipartFormData);\r\n  router.push(\"/menu07/board/list\");\r\n}\r\nfunction handleCancel() {\r\n  router.push(\"/menu07/board/list\");\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./WriteForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./WriteForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["module","exports","data","filename","mime","bom","blobData","blob","Blob","type","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","async","getBoardList","pageNo","response","axios","params","result","error","status","apiAuth","createBoard","multipartFormData","dbBoard","readBoard","bno","hit","board","downloadBoardAttach","responseType","deleteBoard","updateBoard","class","_createBlock","_Transition","name","_createElementVNode","_ctx","_renderSlot","onClick","inheritAttrs","__exports__","render","ref","loading","handleBtn1","value","work","then","catch","console","log","finally","handleBtn2","promise","Promise","resolve","reject","alertDialog","alertDialogMessage","user","reactive","id","password","role","email","handleJoin","store","useStore","useRouter","handleLogin","handleLogout","page","route","useRoute","router","query","apiBoard","push","range","start","end","numbers","i","changePageNo","state","userId","watch","newUrl","oldUrl","path","battach","getBoard","downloadBattach","fileDownload","battachoname","handleRemove","newBattach","handleUpdate","FormData","append","btitle","bcontent","files","length","handleCancel","previewImg","handleAdd"],"sourceRoot":""}