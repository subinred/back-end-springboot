{"version":3,"file":"js/menu03.4af7a286.js","mappings":"wpBAgCA,MAAMA,GAASC,EAAAA,EAAAA,IAAI,IACnB,SAASC,IACPC,QAAQC,IAAI,mBAEd,SAASC,EAAWC,EAASC,GAC3BJ,QAAQC,IAAI,mBACZD,QAAQC,IAAI,YAAYE,GACxBH,QAAQC,IAAIG,EAAMC,QAClBL,QAAQC,IAAIG,EAAME,MAEpB,SAASC,EAAYH,GACnBJ,QAAQC,IAAI,yBACZD,QAAQC,IAAIG,EAAMC,QAClBL,QAAQC,IAAIG,EAAMC,OAAOG,MACzBR,QAAQC,IAAIG,EAAMC,OAAOI,OACzBZ,EAAOY,MAAML,EAAMC,OAAOI,MAG5B,SAASC,IACPV,QAAQC,IAAI,cAGd,SAASU,IACPX,QAAQC,IAAI,c,oxBCpDd,MAAMW,EAAc,EAEpB,S,2tBCsCA,MAAMf,GAAOC,EAAAA,EAAAA,IAAI,IACXe,GAAQf,EAAAA,EAAAA,IAAI,CAChBU,KAAM,GACNM,QAAS,GACTC,MAAO,IA2CT,SAASC,IACPH,EAAQJ,MAAM,CACZD,KAAM,GACNM,QAAS,GACTC,MAAO,G,OA3CXE,EAAAA,EAAAA,IAAMpB,GAAQ,CAACqB,EAAWC,KACxBnB,QAAQoB,MAAM,gBACdpB,QAAQC,IAAI,cAAeiB,GAC3BlB,QAAQC,IAAI,cAAekB,GAC3BnB,QAAQqB,eAIVJ,EAAAA,EAAAA,IAAMJ,GACJ,CAACS,EAAYC,KACbvB,QAAQoB,MAAM,iBACdpB,QAAQC,IAAI,eAAgBqB,GAC5BtB,QAAQC,IAAI,eAAgBsB,GAC5BvB,QAAQqB,aAEV,CACEG,MAAK,KAIPP,EAAAA,EAAAA,KAAM,IACGJ,EAAQJ,MAAMD,OACpB,CAACiB,EAASC,KACT1B,QAAQoB,MAAM,6BACdpB,QAAQC,IAAI,YAAawB,GACzBzB,QAAQC,IAAI,YAAayB,GACzB1B,QAAQqB,eAIZJ,EAAAA,EAAAA,IAAM,CAACpB,EAAQgB,IAAU,EAAEK,EAAWI,IAAcH,EAAUI,MAC1DvB,QAAQoB,MAAM,gBACdpB,QAAQC,IAAI,QAAS,CAACiB,EAAWI,IACjCtB,QAAQC,IAAI,MAAO,CAACkB,EAAWI,IAC/BvB,QAAQqB,aAET,CACDG,MAAK,I,+5BCrFP,MAAMZ,EAAc,EAEpB","sources":["webpack://front-end-vue/./src/views/menu03/Exam01EventHandling.vue","webpack://front-end-vue/./src/views/menu03/Exam01EventHandling.vue?efde","webpack://front-end-vue/./src/views/menu03/Exam02Watch.vue","webpack://front-end-vue/./src/views/menu03/Exam02Watch.vue?3b92"],"sourcesContent":["<template>\r\n<div class=\"card\">\r\n  <div class=card-header>\r\n    Exam01EventHandling\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <div>\r\n      <h6>[Event Handling]</h6>\r\n      <button @click=\"handleBtn1\" class=\"btn btn-info btn-sm mr-2\">버튼1</button>\r\n      <button @click=\"handleBtn2('vue is good', $event)\" class=\"btn btn-info btn-sm mr-2\">버튼2</button>\r\n    </div>\r\n    <div>\r\n      <h6>{DOM Event 객체 참조]</h6>\r\n      <input type=\"text\" name=\"userId\" :value=\"userId\" @keyup=\"handleInput($event)\"/>\r\n      <br/>\r\n      입력 내용: {{userId}}\r\n    </div>\r\n    <div>\r\n        <h6>[이벤트 수식어 사용]</h6>\r\n        <a href=\"https://vuejs.org/guide/introduction.html\" @click.prevent=\"handleLink\">링크</a> <!--spa 방식 동작을 위해 prevent 함-->\r\n        <form action=\"https://vuejs.org/guide/introduction.html\" @submit.prevent=\"handleForm\"> <!--spa 방식 동작을 위해 prevent 함-->\r\n          <input type=\"text\" v-model=\"userId\" /> <br />\r\n          <input type=\"submit\" value=\"제출\" class=\"btn btn-success btn-sm mt-2\" />\r\n        </form>\r\n      </div>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref} from \"vue\";\r\n//반응형 속성\r\nconst userId = ref(\"\")\r\nfunction handleBtn1() {\r\n  console.log(\"handleBtn1() 실행\");\r\n}\r\nfunction handleBtn2(message, event) {\r\n  console.log(\"handleBtn2() 실행\");\r\n  console.log(\"message: \"+message);\r\n  console.log(event.target);\r\n  console.log(event.type);\r\n}\r\nfunction handleInput(event){\r\n  console.log(\"handleInput(event) 실행\");\r\n  console.log(event.target);//input element가 가지고 있는 이름과 value값\r\n  console.log(event.target.name);\r\n  console.log(event.target.value);\r\n  userId.value=event.target.value;//v-model을 안써도 양방향 바인딩 효과\r\n}\r\n\r\nfunction handleLink() {\r\n  console.log(\"handleLink\");\r\n}\r\n\r\nfunction handleForm() {\r\n  console.log(\"handleForm\");\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./Exam01EventHandling.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam01EventHandling.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      Exam02Watch\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">UserId</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"userId\">\r\n          </div>\r\n      </div>\r\n      <hr/>\r\n      <form>      \r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">Name</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"product.name\">\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">Company</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"product.company\">\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">Price</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"number\" class=\"form-control\" v-model.number=\"product.price\">\r\n          </div>\r\n        </div>\r\n      </form> \r\n      <hr/>\r\n      <button @click=\"handleButton\" class=\"btn btn-info btn-sm\">product 객체 변경</button>     \r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref, watch} from \"vue\";\r\n\r\n//반응형 속성 선언\r\nconst userId=ref(\"\");\r\nconst product=ref({\r\n  name: \"\",\r\n  company: \"\",\r\n  price: 0\r\n});\r\n\r\n//값 타입의 속성 감시 설정\r\nwatch(userId, (newUserId, oldUserId) => {\r\n  console.group(\"userId 변경 감시\");\r\n  console.log(\"newUserId: \", newUserId);\r\n  console.log(\"oldUserId: \", oldUserId);\r\n  console.groupEnd();\r\n});\r\n\r\n//객체 타입의 반응형 속성 감시 설정\r\nwatch(product, \r\n  (newProduct, oldProduct) => {\r\n  console.group(\"product 변경 감시\");\r\n  console.log(\"newProduct: \", newProduct);\r\n  console.log(\"oldProduct: \", oldProduct);\r\n  console.groupEnd();\r\n},\r\n{\r\n  deep:true //객체가 바뀌지 않고 속성만 바뀌어도 실행됨\r\n}\r\n);\r\n//객체 타입의 반응형 속성 일부 감시 설정\r\nwatch(()=>{\r\n  return product.value.name \r\n}, (newName, oldName) => {//리턴되는 값이 실행될 때마다 콜백함수 실행\r\n    console.group(\"product 객체의 name 속성 변경 감시\");\r\n    console.log(\"newName: \", newName);\r\n    console.log(\"oldName: \", oldName);\r\n    console.groupEnd();\r\n}\r\n);\r\n//멀티 반응형 속성 감시 설정\r\nwatch([userId, product], ([newUserId, newProduct], [oldUserId,oldProduct]) => {\r\n    console.group(\"멀티 반응형 속성 감시\");\r\n    console.log(\"new: \", [newUserId, newProduct]);\r\n    console.log(\"old\", [oldUserId, oldProduct]);\r\n    console.groupEnd();\r\n\r\n}, {\r\n  deep:true\r\n});\r\nfunction handleButton() {\r\n  product.value={\r\n    name: \"\",\r\n    company: \"\",\r\n    price: 0\r\n  };\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./Exam02Watch.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam02Watch.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["userId","ref","handleBtn1","console","log","handleBtn2","message","event","target","type","handleInput","name","value","handleLink","handleForm","__exports__","product","company","price","handleButton","watch","newUserId","oldUserId","group","groupEnd","newProduct","oldProduct","deep","newName","oldName"],"sourceRoot":""}