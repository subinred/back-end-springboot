{"version":3,"file":"js/menu06.18764517.js","mappings":"mgBA6BA,MAAMA,GAAMC,EAAAA,EAAAA,MACNC,GAAOC,EAAAA,EAAAA,IAAI,IACjB,SAASC,IACP,OAAOJ,EAAMK,MAAMH,OAIrB,MAAMI,GAAeC,EAAAA,EAAAA,KAAS,IACrBP,EAAMK,MAAMH,SAKrB,SAASM,IAEPR,EAAMS,OAAO,YAAaP,EAAOQ,OAGnC,SAASC,IAEPX,EAAMY,SAAS,mBAAoB,CAACC,SAAS,IAAMX,OAAOA,EAAOQ,Q,s5BC9CnE,MAAMI,EAAc,EAEpB,S,8aCwBA,MAAMd,GAAMC,EAAAA,EAAAA,MACZ,SAASc,IACP,OAAOf,EAAMK,MAAMW,QAAQC,MAG7B,MAAMC,GAAcX,EAAAA,EAAAA,KAAS,IAEpBP,EAAMmB,QAAQ,sBAGjBT,GAAMP,EAAAA,EAAAA,IAAI,GAChB,SAASiB,IACPpB,EAAMS,OAAO,mBAAoBC,EAAMA,OAEzC,SAASW,IACPrB,EAAMY,SAAS,0BAA2B,CAACC,SAAU,IAAMH,MAAMA,EAAMA,Q,sgCCzCzE,MAAMI,EAAc,EAEpB","sources":["webpack://front-end-vue/./src/views/menu06/Exam01RootState.vue","webpack://front-end-vue/./src/views/menu06/Exam01RootState.vue?67d7","webpack://front-end-vue/./src/views/menu06/Exam02CounterState.vue","webpack://front-end-vue/./src/views/menu06/Exam02CounterState.vue?779f"],"sourcesContent":["<template>\r\n<div class=\"card\">\r\n  <div class=card-header>\r\n    Exam01RootState\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <h6>[Root State 읽기]</h6>\r\n    <p>userId 단방향 바인딩: {{$store.state.userId}}</p>\r\n    <p>userId 단방향 바인딩: {{store.state.userId}}</p><!--이 방식으로 써도 윗줄과 똑같은 값-->\r\n    <p>userId 단방향 바인딩: {{store.getters.getUserId}}</p>\r\n    <p>userId 단방향 바인딩: {{getUserId()}}</p>\r\n    <p>userId 단방향 바인딩: {{computedUserId}}</p>\r\n    <p>userId 양방향 바인딩: <input type=\"text\" v-model=\"$store.state.userId\"/></p>\r\n  </div>\r\n  <hr/>\r\n  <h6>[Root State 변경]</h6>\r\n  <p>userId 변경값 입력: <input type=\"text\" v-model=\"userId\"/></p>\r\n  <div>\r\n    <button @click=\"changeUserIdByMutation\" class=\"btn btn-info btn-sm mr-2\">userId 변경(Mutation 동기 방식)</button>\r\n    <button @click=\"changeUserIdByAction\" class=\"btn btn-info btn-sm mr-2\">userId 변경(Action 비동기 방식)</button>\r\n  </div>\r\n  \r\n\r\n</div>\r\n</template>\r\n\r\n<script setup>\r\nimport {useStore} from \"vuex\";\r\nimport {computed, ref} from \"vue\";\r\nconst store=useStore();\r\nconst userId=ref(\"\");\r\nfunction getUserId(){\r\n  return store.state.userId;\r\n  //Store getter를 이용하 상태 읽기\r\n  //return store.getters,getUserId;\r\n}\r\nconst computedUserId=computed(()=>{\r\n  return store.state.userId;\r\n  //Store getter를 이용하 상태 읽기\r\n  //return store.getters.getUserId;\r\n});\r\n\r\nfunction changeUserIdByMutation() {\r\n  //Store mutation을 이용한 동기 상태 변경\r\n  store.commit(\"setUserId\", userId.value);// setUserId: mutation의 이름\r\n}\r\n\r\nfunction changeUserIdByAction() {\r\n  //Store actions를 이용한 비동기 상태 변경\r\n  store.dispatch(\"setUserIdByAsync\", {duration:3000, userId:userId.value});\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./Exam01RootState.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam01RootState.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n<div class=\"card\">\r\n  <div class=card-header>\r\n    Exam02CounterState\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <div>\r\n      <h6>[Counter State 읽기]</h6>\r\n      <p>counter/count 단방향 바인딩: {{$store.state.counter.count}}</p>\r\n      <p>counter/count 단방향 바인딩: {{store.state.counter.count}}</p><!--이 방식으로 써도 윗줄과 똑같은 값-->\r\n      <p>counter/count 단방향 바인딩: {{store.getters[\"counter/getCount\"]}}</p>\r\n      <p>counter/count 단방향 바인딩: {{getCount()}}</p>\r\n      <p>counter/count 단방향 바인딩: {{computedCount}}</p>\r\n      <p>counter/count 양방향 바인딩: <input type=\"text\" v-model=\"$store.state.counter.count\"/></p>\r\n    </div>\r\n    <hr/>\r\n    <h6>[Counter State 변경]</h6>\r\n    <p>count 증가값 입력: <input type=\"text\" v-model.number=\"value\"/></p>\r\n    <div>\r\n      <button @click=\"changeCountByMutation\" class=\"btn btn-info btn-sm mr-2\">count 변경(Mutation 동기 방식)</button>\r\n      <button @click=\"changeCountByAction\" class=\"btn btn-info btn-sm mr-2\">count 변경(Action 비동기 방식)</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script setup>\r\nimport {useStore} from \"vuex\";\r\nimport {computed, ref} from \"vue\";\r\nconst store=useStore();\r\nfunction getCount(){\r\n  return store.state.counter.count;\r\n  //return store.getters[\"counter/getCount\"];\r\n}\r\nconst computedCount=computed(()=>{\r\n  //return store.state.counter.count;\r\n  return store.getters[\"counter/getCount\"];\r\n});\r\n\r\nconst value=ref(1);\r\nfunction changeCountByMutation() {\r\n  store.commit(\"counter/setCount\", value.value);\r\n}\r\nfunction changeCountByAction() {\r\n  store.dispatch(\"counter/setCountByAsync\", {duration: 3000, value:value.value});\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./Exam02CounterState.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam02CounterState.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["store","useStore","userId","ref","getUserId","state","computedUserId","computed","changeUserIdByMutation","commit","value","changeUserIdByAction","dispatch","duration","__exports__","getCount","counter","count","computedCount","getters","changeCountByMutation","changeCountByAction"],"sourceRoot":""}